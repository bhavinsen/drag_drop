{"ast":null,"code":"var _jsxFileName = \"/home/ts/Documents/Projects/clone_drag_drop/drag_drop/src/components/list.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { DataContext } from \"./context\";\nimport './list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  userSelect: \"none\",\n  padding: 16,\n  margin: `0 0 8px 0`,\n  display: \"flex\",\n  justifyContent: 'space-between',\n  background: isDragging ? \"lightgreen\" : \"#0093E9\",\n  backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)',\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  width: 390,\n  margin: \"auto\",\n  padding: 0\n});\n\nexport default function List() {\n  _s();\n\n  const [data, setData] = useContext(DataContext);\n  const [textvalue, setTexttvalue] = useState();\n\n  const deleteItem = id => {\n    setData(data.filter(x => x.id !== id));\n  };\n\n  const handleEnd = result => {\n    console.log(result, data);\n    if (!result.destination) return;\n    const items = Array.from(data);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setData(items);\n  };\n\n  const handleChange = e => {\n    setTexttvalue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: handleEnd,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"to-dos\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"ul\", { ...provided.droppableProps,\n              style: getListStyle(snapshot.isDraggingOver),\n              ref: provided.innerRef,\n              children: [data && (data === null || data === void 0 ? void 0 : data.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: item.id.toString(),\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_createElement(\"div\", { ...provided.draggableProps,\n                  ref: provided.innerRef,\n                  ...provided.dragHandleProps,\n                  key: item.id,\n                  style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 49\n                  }\n                }, /*#__PURE__*/_jsxDEV(\"input\", {\n                  style: {\n                    width: 120\n                  },\n                  type: \"text\",\n                  onChange: e => handleChange(e),\n                  name: \"add\",\n                  defaultValue: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteItem(item.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 53\n                }, this))\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this))), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"vTIk6F5OajNFKwMyleU9B4VRmZY=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/ts/Documents/Projects/clone_drag_drop/drag_drop/src/components/list.js"],"names":["useContext","useState","DragDropContext","Droppable","Draggable","DataContext","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","display","justifyContent","background","backgroundImage","getListStyle","isDraggingOver","width","List","data","setData","textvalue","setTexttvalue","deleteItem","id","filter","x","handleEnd","result","console","log","destination","items","Array","from","reorderedItem","splice","source","index","handleChange","e","target","value","provided","snapshot","droppableProps","innerRef","map","item","toString","draggableProps","dragHandleProps","style","name","placeholder"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { DataContext } from \"./context\";\nimport './list.css';\n\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    userSelect: \"none\",\n    padding: 16,\n    margin: `0 0 8px 0`,\n    display: \"flex\",\n    justifyContent: 'space-between',\n    background: isDragging ? \"lightgreen\" : \"#0093E9\",\n    backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)',\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    width: 390,\n    margin: \"auto\",\n    padding: 0,\n});\n\nexport default function List() {\n    const [data, setData] = useContext(DataContext);\n    const [textvalue, setTexttvalue] = useState();\n\n    const deleteItem = (id) => {\n        setData(data.filter((x) => x.id !== id));\n    };\n\n    const handleEnd = (result) => {\n        console.log(result, data);\n        if (!result.destination) return;\n        const items = Array.from(data);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n        setData(items);\n    };\n\n    const handleChange = (e) => {\n        setTexttvalue(e.target.value);\n\n    };\n\n    return (\n        <div className=\"list-app\">\n            <div className=\"App\">\n                <div>\n                    <DragDropContext onDragEnd={handleEnd}>\n                        <Droppable droppableId=\"to-dos\">\n                            {(provided, snapshot) => (\n                                <ul {...provided.droppableProps} style={getListStyle(snapshot.isDraggingOver)} ref={provided.innerRef}>\n                                    {data && data?.map((item, index) => (\n\n                                        <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                    {...provided.draggableProps}\n                                                    ref={provided.innerRef}\n                                                    {...provided.dragHandleProps}\n                                                    key={item.id}\n                                                    style={getItemStyle(\n                                                        snapshot.isDragging,\n                                                        provided.draggableProps.style\n                                                    )}\n                                                >\n\n                                                    <input\n                                                        style={{ width: 120 }}\n                                                        type=\"text\"\n                                                        onChange={(e) => handleChange(e)}\n                                                        name=\"add\"\n                                                        defaultValue={item.name}\n                                                    />\n\n                                                    <button onClick={() => deleteItem(item.id)}>Delete</button>\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                    {provided.placeholder}\n                                </ul>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </div>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}